{"Title":"Custom Value Conversion","Key":"CustomValueConversion","Sources":[{"Name":"CustomBoolTypeConverter.cs","Content":"public class CustomBoolTypeConverter : TypeConverterBase&lt;bool?&gt;\r\n{\r\n    private const string c_yes = \"YES\";\r\n    private const string c_no = \"NO\";\r\n    private const string c_null = \"Unknown\";\r\n\r\n    protected override object ConvertToCellValue(bool? source, ExcelRange cell)\r\n    {\r\n        switch (source)\r\n        {\r\n            case true: return c_yes;\r\n            case false: return c_no;\r\n            default: return c_null;\r\n        }\r\n    }\r\n\r\n    protected override bool? ConvertFromCellValue(object source)\r\n    {\r\n        var stringValue = source?.ToString().Trim();\r\n\r\n        if (stringValue?.Equals(c_yes, StringComparison.InvariantCultureIgnoreCase) == true)\r\n        {\r\n            return true;\r\n        }\r\n        else if (stringValue?.Equals(c_no, StringComparison.InvariantCultureIgnoreCase) == true)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}","IsDefault":false},{"Name":"CustomValueConversionExample.cs","Content":"protected override void Test(Stream target)\r\n{\r\n    var model = new List&lt;QuestionSheetItem&gt;\r\n    {\r\n        new QuestionSheetItem\r\n        {\r\n            Question = \"Does XlsSerializer support custom value converters?\",\r\n            Answer = true\r\n        },\r\n        new QuestionSheetItem\r\n        {\r\n            Question = \"Is it complicated?\",\r\n            Answer = false\r\n        },\r\n        new QuestionSheetItem\r\n        {\r\n            Question = \"Is there any comparable library?\",\r\n            Answer = null\r\n        }\r\n    };\r\n\r\n    var serializer = new XlsxSerializer(new XlsxSerializerSettings(new CustomBoolTypeConverter()));\r\n\r\n    serializer.Serialize(model, target);\r\n\r\n    var deserialized = serializer.Deserialize&lt;List&lt;QuestionSheetItem&gt;&gt;(target);\r\n\r\n    Assert.Equal(model, deserialized, CompareItems&lt;QuestionSheetItem&gt;((a,b) =&gt;\r\n    {\r\n        Assert.Equal(a.Question, b.Question);\r\n        Assert.Equal(a.Answer, b.Answer);\r\n\r\n        return true;\r\n    }));\r\n}","IsDefault":true},{"Name":"QuestionSheetItem.cs","Content":"public class QuestionSheetItem\r\n{\r\n    [XlsColumn(\"A\")]\r\n    public string Question { get; set; }\r\n\r\n    [XlsColumn(\"B\")]\r\n    public bool? Answer { get; set; }\r\n}","IsDefault":false}],"OutputFile":"CustomValueConversion.xlsx","OutputFileLink":null}